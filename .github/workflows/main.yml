name: Update Deployment Config & Deploy ChatQnA

on:
  workflow_dispatch:
    inputs:
      core_count:
        description: 'Cores per instance'
        required: true
        type: choice
        options: 
          - '8'
          - '16'
          - '32'
          - '64'

      memory_capacity:
        description: 'Memory capacity (Mi)'
        required: true
        type: choice
        options: 
          - '4000Mi'
          - '8000Mi'
          - '16000Mi'
          - '32000Mi'

      model_id:
        description: 'Model ID'
        required: true
        type: choice
        options:
          - 'meta-llama/Meta-Llama-3-8B-Instruct'
          - 'meta-llama/Meta-Llama-3-70B-Instruct'
          - 'mistral/Mistral-7B-v0.1'
          - 'tiiuae/falcon-40B-instruct'

jobs:
  update-deployment:
    runs-on: ubuntu-latest
    outputs:
      cores: ${{ steps.set-outputs.outputs.cores }}
      memory: ${{ steps.set-outputs.outputs.memory }}
      model: ${{ steps.set-outputs.outputs.model }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: üîß Update benchmark_chatqna.yaml
        run: |
          echo "Updating deployment configurations..."
          sed -i "s/cores_per_instance: \".*\"/cores_per_instance: \"${{ github.event.inputs.core_count }}\"/" benchmark_chatqna.yaml
          sed -i "s/memory_capacity: \".*\"/memory_capacity: \"${{ github.event.inputs.memory_capacity }}\"/" benchmark_chatqna.yaml
          sed -i "s|model_id: \".*\"|model_id: \"${{ github.event.inputs.model_id }}\"|" benchmark_chatqna.yaml
          echo "Updated YAML file:"
          cat benchmark_chatqna.yaml

      - name: üöÄ Commit and Push Changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add benchmark_chatqna.yaml
          git commit -m "Auto-update: cores=${{ github.event.inputs.core_count }}, memory=${{ github.event.inputs.memory_capacity }}, model=${{ github.event.inputs.model_id }}" || echo "No changes to commit"
          git push https://${{ secrets.PAT_TOKEN }}@github.com/ABIRAMIGUGANATHAN/chatQ-A.git HEAD:main || echo "Push failed, skipping"

      - name: üíæ Set Outputs
        id: set-outputs
        run: |
          echo "cores=${{ github.event.inputs.core_count }}" >> $GITHUB_OUTPUT
          echo "memory=${{ github.event.inputs.memory_capacity }}" >> $GITHUB_OUTPUT
          echo "model=${{ github.event.inputs.model_id }}" >> $GITHUB_OUTPUT

  deploy-chatqna:
    runs-on: ubuntu-latest
    needs: update-deployment  # Ensures deployment runs only after update-deployment succeeds

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üê≥ Set Up Docker Compose
        env:
          CORES: ${{ needs.update-deployment.outputs.cores }}
          MEMORY: ${{ needs.update-deployment.outputs.memory }}
          MODEL_ID: ${{ needs.update-deployment.outputs.model }}
        run: |
          echo "Deploying ChatQnA using Docker Compose..."
          echo "Using cores: $CORES, memory: $MEMORY, model: $MODEL_ID"

          COMPOSE_PATH="docker_compose/intel/cpu/xeon/compose.yaml"
          docker compose -f $COMPOSE_PATH down  # Stop existing containers

          docker compose -f $COMPOSE_PATH up -d \
            --env CORES=$CORES \
            --env MEMORY=$MEMORY \
            --env MODEL_ID=$MODEL_ID

      - name: üîç Verify Running Containers
        run: docker ps -a

      - name: üõ† Debug Logs (Optional)
        if: failure()
        run: docker compose -f docker_compose/intel/cpu/xeon/compose.yaml logs

      - name: ‚úÖ Deployment Completed
        run: echo "ChatQnA deployment successful!"
